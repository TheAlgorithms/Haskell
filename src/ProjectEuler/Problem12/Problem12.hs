-- The sequence of triangle numbers is generated by adding the 
-- natural numbers. So the 7th triangle number would be 1 + 2 
-- + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
-- Let us list the factors of the first seven triangle numbers:
--      1: 1
--      3: 1,3
--      6: 1,2,3,6
--     10: 1,2,5,10
--     15: 1,3,5,15
--     21: 1,3,7,21
--     28: 1,2,4,7,14,28
-- We can see that 28 is the first triangle number to have over five divisors.
-- What is the value of the first triangle number to have over five hundred divisors?

module Main where

triangleNumbers :: [Int]
triangleNumbers = scanl1 (+) [1..]

-- Returns the number of divisors for a number n
divisors :: Integral a => a -> [a]
divisors n = concatMap f (filter ((==) 0 . mod n) (takeWhile (\k -> k*k <= n) [1 .. n]))
    where f k | k < l     = [k, l]
              | otherwise = [k]
              where 
                  l = div n k

solve :: Int -> Int 
solve index 
    | x >= 500 = triangleNumbers !! index
    | x <  500 = solve (index + 1)
    where x = length $ divisors (triangleNumbers !! index)

main :: IO ()
main = do print (solve 1)